// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NeedsSoySauce.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace hackathon.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210424134607_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("GoonGoonsquad", b =>
                {
                    b.Property<string>("GoonsId")
                        .HasColumnType("text");

                    b.Property<Guid>("GoonsquadsId")
                        .HasColumnType("uuid");

                    b.HasKey("GoonsId", "GoonsquadsId");

                    b.HasIndex("GoonsquadsId");

                    b.ToTable("GoonGoonsquad");
                });

            modelBuilder.Entity("NeedsSoySauce.Entities.Goon", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastSeenOnUtc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Goons");
                });

            modelBuilder.Entity("NeedsSoySauce.Entities.Goonsquad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Goonsquads");
                });

            modelBuilder.Entity("NeedsSoySauce.Entities.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("GoonId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GoonId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("NeedsSoySauce.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("GoonsquadId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("SentOnUtc")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("GoonsquadId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("GoonGoonsquad", b =>
                {
                    b.HasOne("NeedsSoySauce.Entities.Goon", null)
                        .WithMany()
                        .HasForeignKey("GoonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeedsSoySauce.Entities.Goonsquad", null)
                        .WithMany()
                        .HasForeignKey("GoonsquadsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NeedsSoySauce.Entities.Job", b =>
                {
                    b.HasOne("NeedsSoySauce.Entities.Goon", "Goon")
                        .WithMany()
                        .HasForeignKey("GoonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goon");
                });

            modelBuilder.Entity("NeedsSoySauce.Entities.Message", b =>
                {
                    b.HasOne("NeedsSoySauce.Entities.Goonsquad", "Goonsquad")
                        .WithMany()
                        .HasForeignKey("GoonsquadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goonsquad");
                });
#pragma warning restore 612, 618
        }
    }
}
